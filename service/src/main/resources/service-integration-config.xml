<!--<?xml version="1.0" encoding="UTF-8"?>-->
<!--<beans xmlns="http://www.springframework.org/schema/beans"-->
<!--       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"-->
<!--       xmlns:int="http://www.springframework.org/schema/integration"-->
<!--       xmlns:int-amqp="http://www.springframework.org/schema/integration/amqp"-->
<!--       xsi:schemaLocation="-->
<!--            http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd-->
<!--            http://www.springframework.org/schema/integration https://www.springframework.org/schema/integration/spring-integration.xsd-->
<!--            http://www.springframework.org/schema/integration/amqp https://www.springframework.org/schema/integration/amqp/spring-integration-amqp.xsd">-->
<!--    <int:channel id="fromRabbit"/>-->
<!--    <int:channel id="registrationRequest"/>-->
<!--    &lt;!&ndash; Inbound channel adapter which receives messages from RabbitMQ &ndash;&gt;-->
<!--    <int-amqp:inbound-channel-adapter queue-names="globomantics.registrationRequest"-->
<!--                                      channel="fromRabbit"/>-->
<!--    &lt;!&ndash; Transformer to convert the message payload from a string containing JSON to an AttendeeRegistration object &ndash;&gt;-->
<!--    <int:json-to-object-transformer input-channel="fromRabbit"-->
<!--                                    output-channel="registrationRequest"-->
<!--                                    type="com.demo.model.AttendeeRegistration"/>-->
<!--    &lt;!&ndash; Service activator to execute registrationService.register(...) &ndash;&gt;-->
<!--    <int:service-activator input-channel="registrationRequest"-->
<!--                           ref="registrationService"-->
<!--                           method="register"/>-->
<!--</beans>-->
